{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { City } from '../models/city';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/cities.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../directives/disable-control.directive\";\nfunction CitiesComponent_tr_14_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CitiesComponent_tr_14_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const city_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editClicked(city_r2));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CitiesComponent_tr_14_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CitiesComponent_tr_14_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateClicked(i_r3));\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CitiesComponent_tr_14_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function CitiesComponent_tr_14_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      const city_r2 = ctx_r14.$implicit;\n      const i_r3 = ctx_r14.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.deleteClicked(city_r2, i_r3));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"border-less-textbox\": a0,\n    \"form-input\": a1\n  };\n};\nfunction CitiesComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 15);\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 17);\n    i0.ɵɵtemplate(6, CitiesComponent_tr_14_button_6_Template, 2, 0, \"button\", 18);\n    i0.ɵɵtemplate(7, CitiesComponent_tr_14_button_7_Template, 2, 0, \"button\", 19);\n    i0.ɵɵtemplate(8, CitiesComponent_tr_14_button_8_Template, 2, 0, \"button\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const city_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, city_r2.cityID != ctx_r0.editCityID, city_r2.cityID == ctx_r0.editCityID))(\"disableControl\", city_r2.cityID != ctx_r0.editCityID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", city_r2.cityID != ctx_r0.editCityID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", city_r2.cityID == ctx_r0.editCityID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", city_r2.cityID != ctx_r0.editCityID);\n  }\n}\nfunction CitiesComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"City Name can't be blank\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CitiesComponent {\n  constructor(citiesService) {\n    this.citiesService = citiesService;\n    this.cities = [];\n    this.isPostCityFormSubmitted = false;\n    this.editCityID = null;\n    this.postCityForm = new FormGroup({\n      cityName: new FormControl(null, [Validators.required])\n    });\n    this.putCityForm = new FormGroup({\n      cities: new FormArray([])\n    });\n  }\n  get putCityFormArray() {\n    return this.putCityForm.get(\"cities\");\n  }\n  loadCities() {\n    this.citiesService.getCities().subscribe({\n      next: response => {\n        this.cities = response;\n        this.cities.forEach(city => {\n          this.putCityFormArray.push(new FormGroup({\n            cityID: new FormControl(city.cityID, [Validators.required]),\n            cityName: new FormControl({\n              value: city.cityName,\n              disabled: true\n            }, [Validators.required])\n          }));\n        });\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {}\n    });\n  }\n  ngOnInit() {\n    this.loadCities();\n  }\n  get postCity_CityNameControl() {\n    return this.postCityForm.controls['cityName'];\n  }\n  postCitySubmitted() {\n    this.isPostCityFormSubmitted = true;\n    console.log(this.postCityForm.value);\n    this.citiesService.postCity(this.postCityForm.value).subscribe({\n      next: response => {\n        console.log(response);\n        //this.loadCities();\n        this.putCityFormArray.push(new FormGroup({\n          cityID: new FormControl(response.cityID, [Validators.required]),\n          cityName: new FormControl({\n            value: response.cityName,\n            disabled: true\n          }, [Validators.required])\n        }));\n        this.cities.push(new City(response.cityID, response.cityName));\n        this.postCityForm.reset();\n        this.isPostCityFormSubmitted = false;\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {}\n    });\n  }\n  //Executes when the clicks on 'Edit' button the for the particular city\n  editClicked(city) {\n    this.editCityID = city.cityID;\n  }\n  //executes when the clicks on 'Update' button after editing\n  updateClicked(i) {\n    this.citiesService.putCity(this.putCityFormArray.controls[i].value).subscribe({\n      next: response => {\n        console.log(response);\n        this.editCityID = null;\n        this.putCityFormArray.controls[i].reset(this.putCityFormArray.controls[i].value);\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {}\n    });\n  }\n  deleteClicked(city, i) {\n    if (confirm(`Are you sure to delete this city: ${city.cityName}?`)) {\n      this.citiesService.deleteCity(city.cityID).subscribe({\n        next: response => {\n          console.log(response);\n          this.putCityFormArray.removeAt(i);\n          this.cities.splice(i, 1);\n        },\n        error: error => {\n          console.log(error);\n        },\n        complete: () => {}\n      });\n    }\n  }\n}\nCitiesComponent.ɵfac = function CitiesComponent_Factory(t) {\n  return new (t || CitiesComponent)(i0.ɵɵdirectiveInject(i1.CitiesService));\n};\nCitiesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CitiesComponent,\n  selectors: [[\"app-cities\"]],\n  decls: 32,\n  vars: 4,\n  consts: [[1, \"flex\"], [1, \"flex-1\", \"w-50\"], [1, \"table-container\"], [1, \"table\", \"w-100\", 3, \"formGroup\"], [\"formArrayName\", \"cities\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\", \"flex\"], [1, \"w-25\"], [\"for\", \"CityName\", 1, \"form-label\", \"pt\"], [1, \"flex-1\"], [\"type\", \"text\", \"formControlName\", \"cityName\", 1, \"form-input\"], [\"class\", \"text-red\", 4, \"ngIf\"], [1, \"button\", \"button-green-back\"], [3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"cityName\", 3, \"ngClass\", \"disableControl\"], [2, \"width\", \"200px\"], [\"class\", \"button button-blue-back\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"button button-blue-back\", \"type\", \"submit\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"button button-red-back ml\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"button\", \"button-blue-back\", 3, \"click\"], [\"type\", \"submit\", 1, \"button\", \"button-blue-back\", 3, \"click\"], [\"type\", \"button\", 1, \"button\", \"button-red-back\", \"ml\", 3, \"click\"], [1, \"text-red\"]],\n  template: function CitiesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Cities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"table\", 3)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"City Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tbody\", 4);\n      i0.ɵɵtemplate(14, CitiesComponent_tr_14_Template, 9, 10, \"tr\", 5);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 6)(17, \"h3\");\n      i0.ɵɵtext(18, \"Create City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function CitiesComponent_Template_form_ngSubmit_19_listener() {\n        return ctx.postCitySubmitted();\n      });\n      i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9)(22, \"label\", 10);\n      i0.ɵɵtext(23, \"City Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 11);\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵtemplate(26, CitiesComponent_span_26_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 8);\n      i0.ɵɵelement(28, \"div\", 9);\n      i0.ɵɵelementStart(29, \"div\", 11)(30, \"button\", 14);\n      i0.ɵɵtext(31, \"Create\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.putCityForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.postCityForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (ctx.postCity_CityNameControl.touched || ctx.isPostCityFormSubmitted) && (ctx.postCity_CityNameControl.errors == null ? null : ctx.postCity_CityNameControl.errors[\"required\"]));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.DisableControlDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormArray","FormControl","FormGroup","Validators","City","i0","CitiesComponent","constructor","citiesService","postCityForm","cityName","required","putCityForm","cities","putCityFormArray","get","loadCities","getCities","subscribe","next","response","forEach","city","push","cityID","value","disabled","error","console","log","complete","ngOnInit","postCity_CityNameControl","controls","postCitySubmitted","isPostCityFormSubmitted","postCity","reset","editClicked","editCityID","updateClicked","i","putCity","deleteClicked","confirm","deleteCity","removeAt","splice","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\CSharp Udemy\\CitiesManagerSolution\\CitiesManager.Client\\src\\app\\cities\\cities.component.ts","C:\\CSharp Udemy\\CitiesManagerSolution\\CitiesManager.Client\\src\\app\\cities\\cities.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { City } from '../models/city';\r\nimport { CitiesService } from '../services/cities.service';\r\n\r\n@Component({\r\n  selector: 'app-cities',\r\n  templateUrl: './cities.component.html',\r\n  styleUrls: ['./cities.component.css']\r\n})\r\nexport class CitiesComponent {\r\n  cities: City[] = [];\r\n  postCityForm: FormGroup;\r\n  isPostCityFormSubmitted: boolean = false;\r\n\r\n  putCityForm: FormGroup;\r\n  editCityID: string | null = null;\r\n\r\n  constructor(private citiesService: CitiesService) {\r\n    this.postCityForm = new FormGroup({\r\n      cityName: new FormControl(null, [ Validators.required ])\r\n    });\r\n\r\n    this.putCityForm = new FormGroup({\r\n      cities: new FormArray([])\r\n    });\r\n  }\r\n\r\n  get putCityFormArray() : FormArray {\r\n    return this.putCityForm.get(\"cities\") as FormArray;\r\n  }\r\n\r\n  loadCities() {\r\n    this.citiesService.getCities()\r\n      .subscribe({\r\n\r\n        next: (response: City[]) => {\r\n          this.cities = response;\r\n\r\n          this.cities.forEach(city => {\r\n            this.putCityFormArray.push(new FormGroup({\r\n              cityID: new FormControl(city.cityID, [Validators.required]),\r\n              cityName: new FormControl({ value: city.cityName, disabled: true }, [Validators.required]),\r\n            }));\r\n          });\r\n        },\r\n\r\n        error: (error: any) => {\r\n          console.log(error)\r\n        },\r\n\r\n        complete: () => { }\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadCities();\r\n  }\r\n\r\n\r\n  get postCity_CityNameControl(): any {\r\n    return this.postCityForm.controls['cityName'];\r\n  }\r\n\r\n\r\n  public postCitySubmitted() {\r\n    this.isPostCityFormSubmitted = true;\r\n\r\n    console.log(this.postCityForm.value);\r\n\r\n    this.citiesService.postCity(this.postCityForm.value).subscribe({\r\n      next: (response: City) => {\r\n        console.log(response);\r\n\r\n        //this.loadCities();\r\n\r\n        this.putCityFormArray.push(new FormGroup({\r\n          cityID: new FormControl(response.cityID, [Validators.required]),\r\n          cityName: new FormControl({ value: response.cityName, disabled: true }, [Validators.required]),\r\n        }))\r\n        this.cities.push(new City(response.cityID, response.cityName));\r\n\r\n\r\n        this.postCityForm.reset();\r\n        this.isPostCityFormSubmitted = false;\r\n      },\r\n\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n\r\n      complete: () => { }\r\n    });\r\n  }\r\n\r\n  //Executes when the clicks on 'Edit' button the for the particular city\r\n  editClicked(city: City) : void {\r\n    this.editCityID = city.cityID;\r\n  }\r\n\r\n  //executes when the clicks on 'Update' button after editing\r\n  updateClicked(i: number): void {\r\n\r\n    this.citiesService.putCity(this.putCityFormArray.controls[i].value).subscribe({\r\n      next: (response: string) => {\r\n        console.log(response);\r\n\r\n        this.editCityID = null;\r\n\r\n        this.putCityFormArray.controls[i].reset(this.putCityFormArray.controls[i].value);\r\n      },\r\n\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n\r\n      complete: () => {},\r\n    });\r\n  }\r\n\r\n  deleteClicked(city: City, i: number) : void {\r\n    if (confirm(`Are you sure to delete this city: ${city.cityName}?`)) {\r\n      this.citiesService.deleteCity(city.cityID).subscribe({\r\n        next: (response: string) => {\r\n          console.log(response);\r\n\r\n          this.putCityFormArray.removeAt(i);\r\n          this.cities.splice(i, 1);\r\n        },\r\n\r\n        error: (error: any) => {\r\n          console.log(error);\r\n        },\r\n\r\n        complete: () => { },\r\n      })\r\n    }\r\n  }\r\n}\r\n","<h2>Cities</h2>\r\n\r\n<div class=\"flex\">\r\n  <div class=\"flex-1 w-50\">\r\n\r\n    <div class=\"table-container\">\r\n      <table class=\"table w-100\" [formGroup]=\"putCityForm\">\r\n\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>City Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody formArrayName=\"cities\">\r\n          <tr *ngFor=\"let city of cities; let i = index\">\r\n            <td>{{i+1}}</td>\r\n\r\n            <td [formGroupName]=\"i\">\r\n              <input type=\"text\" formControlName=\"cityName\" [ngClass]=\"{ 'border-less-textbox': city.cityID != editCityID, 'form-input': city.cityID == editCityID }\" [disableControl]=\"city.cityID != editCityID\" />\r\n            </td>\r\n\r\n            <td style=\"width:200px\">\r\n              <button class=\"button button-blue-back\" (click)=\"editClicked(city)\" *ngIf=\"city.cityID != editCityID\" type=\"button\">Edit</button>\r\n\r\n              <button class=\"button button-blue-back\" (click)=\"updateClicked(i)\" *ngIf=\"city.cityID == editCityID\" type=\"submit\">Update</button>\r\n\r\n              <button class=\"button button-red-back ml\" (click)=\"deleteClicked(city, i)\" *ngIf=\"city.cityID != editCityID\" type=\"button\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <!-- right box begins -->\r\n  <div class=\"flex-1 w-50\">\r\n\r\n    <div class=\"form-container\">\r\n      <h3>Create City</h3>\r\n\r\n      <form [formGroup]=\"postCityForm\" (ngSubmit)=\"postCitySubmitted()\">\r\n\r\n        <!-- City Name-->\r\n        <div class=\"form-field flex\">\r\n          <div class=\"w-25\">\r\n            <label for=\"CityName\" class=\"form-label pt\">City Name</label>\r\n          </div>\r\n\r\n          <div class=\"flex-1\">\r\n            <input type=\"text\" class=\"form-input\" formControlName=\"cityName\" />\r\n\r\n            <span class=\"text-red\" *ngIf=\"(postCity_CityNameControl.touched || isPostCityFormSubmitted) && (postCity_CityNameControl.errors?.['required'])\">City Name can't be blank</span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-field flex\">\r\n          <div class=\"w-25\"></div>\r\n\r\n          <div class=\"flex-1\">\r\n            <button class=\"button button-green-back\">Create</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- right box ends -->\r\n</div>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}