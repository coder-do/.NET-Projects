{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_BASE_URL = \"https://localhost:7221/api/\";\nexport class CitiesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.cities = [];\n  }\n  getCities() {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\n    return this.httpClient.get(`${API_BASE_URL}v1/Cities`, {\n      headers: headers\n    });\n  }\n  postCity(city) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\n    return this.httpClient.post(`${API_BASE_URL}v1/Cities`, city, {\n      headers: headers\n    });\n  }\n  putCity(city) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\n    return this.httpClient.put(`${API_BASE_URL}v1/Cities/${city.cityID}`, city, {\n      headers: headers\n    });\n  }\n  deleteCity(cityID) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\n    return this.httpClient.delete(`${API_BASE_URL}v1/Cities/${cityID}`, {\n      headers: headers\n    });\n  }\n}\nCitiesService.ɵfac = function CitiesService_Factory(t) {\n  return new (t || CitiesService)(i0.ɵɵinject(i1.HttpClient));\n};\nCitiesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CitiesService,\n  factory: CitiesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,YAAY,GAAW,6BAA6B;AAK1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,WAAM,GAAW,EAAE;EAGnB;EAEOC,SAAS;IACd,IAAIC,OAAO,GAAG,IAAIN,WAAW,EAAE;IAC/BM,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;IAE3D,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAS,GAAGP,YAAY,WAAW,EAAE;MAAEK,OAAO,EAAEA;IAAO,CAAE,CAAC;EACtF;EAEOG,QAAQ,CAACC,IAAU;IACxB,IAAIJ,OAAO,GAAG,IAAIN,WAAW,EAAE;IAC/BM,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;IAE3D,OAAO,IAAI,CAACH,UAAU,CAACO,IAAI,CAAO,GAAGV,YAAY,WAAW,EAAES,IAAI,EAAE;MAAEJ,OAAO,EAAEA;IAAO,CAAE,CAAC;EAC3F;EAEOM,OAAO,CAACF,IAAU;IACvB,IAAIJ,OAAO,GAAG,IAAIN,WAAW,EAAE;IAC/BM,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;IAE3D,OAAO,IAAI,CAACH,UAAU,CAACS,GAAG,CAAS,GAAGZ,YAAY,aAAaS,IAAI,CAACI,MAAM,EAAE,EAAEJ,IAAI,EAAE;MAAEJ,OAAO,EAAEA;IAAO,CAAE,CAAC;EAC3G;EAEOS,UAAU,CAACD,MAAqB;IACrC,IAAIR,OAAO,GAAG,IAAIN,WAAW,EAAE;IAC/BM,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;IAE3D,OAAO,IAAI,CAACH,UAAU,CAACY,MAAM,CAAS,GAAGf,YAAY,aAAaa,MAAM,EAAE,EAAE;MAAER,OAAO,EAAEA;IAAO,CAAE,CAAC;EACnG;;AAhCWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["HttpHeaders","API_BASE_URL","CitiesService","constructor","httpClient","getCities","headers","append","get","postCity","city","post","putCity","put","cityID","deleteCity","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\CSharp Udemy\\CitiesManagerSolution\\CitiesManager.Client\\src\\app\\services\\cities.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { City } from \"../models/city\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nconst API_BASE_URL: string = \"https://localhost:7221/api/\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CitiesService {\r\n  cities: City[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  public getCities(): Observable<City[]> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\r\n\r\n    return this.httpClient.get<City[]>(`${API_BASE_URL}v1/Cities`, { headers: headers })\r\n  }\r\n\r\n  public postCity(city: City): Observable<City> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\r\n\r\n    return this.httpClient.post<City>(`${API_BASE_URL}v1/Cities`, city, { headers: headers })\r\n  }\r\n\r\n  public putCity(city: City): Observable<string> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\r\n\r\n    return this.httpClient.put<string>(`${API_BASE_URL}v1/Cities/${city.cityID}`, city, { headers: headers })\r\n  }\r\n\r\n  public deleteCity(cityID: string | null): Observable<string> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append(\"Authorization\", \"Bearer mytoken\");\r\n\r\n    return this.httpClient.delete<string>(`${API_BASE_URL}v1/Cities/${cityID}`, { headers: headers })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}